<controls:PageBase
    xmlns:prism="using:Microsoft.Practices.Prism.Mvvm"
    xmlns:controls="using:WellDone.Controls"
    x:Class="WellDone.Views.MainPage"
    prism:ViewModelLocator.AutoWireViewModel="True"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    xmlns:designTime="using:WellDone.DesignTime">

    <d:Page.DataContext>
        <designTime:MainPageViewModel/>
    </d:Page.DataContext>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="PrimaryColumn" Width="350" />
            <ColumnDefinition x:Name="SecondaryColumn" Width="*"/>
            <ColumnDefinition x:Name="TrietaryColumn" Width="350" />
        </Grid.ColumnDefinitions>

         <!--Back button and page title--> 
        <Grid x:Name="TitlePanel" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>                
            </Grid.ColumnDefinitions>
            <!--<Button x:Name="backButton" Margin="39,59,39,0" Command="{Binding NavigationHelper.GoBackCommand, ElementName=pageRoot}"
                        Style="{StaticResource NavigationBackButtonNormalStyle}"
                        VerticalAlignment="Top"
                        AutomationProperties.Name="Back"
                        AutomationProperties.AutomationId="BackButton"
                        AutomationProperties.ItemType="Navigation Button"/>-->
            <!--<TextBlock Text="{Binding LoggedUser.UserId}" Margin="5,59,39,0" Style="{StaticResource BodyTextBlockStyle}" FontFamily="Global User Interface"/>-->
            <!--<TextBlock x:Name="pageTitle" Text="WellDone" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="1" Grid.ColumnSpan="2" 
                        IsHitTestVisible="false" TextWrapping="NoWrap" VerticalAlignment="Bottom" Margin="0,0,0,40"/>-->
            <Image Source="ms-appx:///Assets/Wide310x150Logo.scale-80.png" Grid.Column="0" Stretch="None"  />
        </Grid>
        <!-- Left Buttons -->
        <StackPanel Grid.Row="1" Margin="-10,0,0,0" Orientation="Vertical">
            <Button Command="{Binding ShowListDetailCommand}" CommandParameter="inbox"
                TabIndex="1" Style="{StaticResource MyListButtonWindows}" FontFamily="Global User Interface">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="250"/>
                    </Grid.ColumnDefinitions>

                    <Image Grid.Column="0" Source="ms-appx:///Assets/box2-64.png" Stretch="None" Margin="15,0,0,15"/>
                    <TextBlock Text="{Binding InBoxCount}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        

                    <StackPanel  Grid.Column="1" Orientation="Vertical" Margin="15,0,15,0">

                        <TextBlock Text="Inbox" x:Uid="MainPageInboxList" Style="{StaticResource SubheaderTextBlockStyle}"/>
                        <TextBlock Text="New unsorted tasks and ideas." x:Uid="MainPageInboxListSubHeader" Style="{StaticResource SubtitleTextBlockStyle}"/>

                    </StackPanel>
                </Grid>
            </Button>
            <Button Command="{Binding ShowListDetailCommand}" CommandParameter="today"
                TabIndex="2" Style="{StaticResource MyListButtonWindows}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="250"/>
                    </Grid.ColumnDefinitions>

                    <Image Grid.Column="0" Source="ms-appx:///Assets/tear_off_calendar-64.png" Stretch="None" Margin="15,0,0,15"/>
                    <TextBlock Text="{Binding TodayBoxCount}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                    <StackPanel  Grid.Column="1" Orientation="Vertical" Margin="15,0,15,0">

                        <TextBlock Text="Today" x:Uid="MainPageTodayList" Style="{StaticResource SubheaderTextBlockStyle}"/>
                        <TextBlock Text="Tasks for today." x:Uid="MainPageTodayListSubHeader" Style="{StaticResource SubtitleTextBlockStyle}"/> 

                    </StackPanel>
                </Grid>
            </Button>
            <Button Command="{Binding ShowListDetailCommand}" CommandParameter="projects"
                TabIndex="3" Style="{StaticResource MyListButtonWindows}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="250"/>
                    </Grid.ColumnDefinitions>

                    <Image Grid.Column="0" Source="ms-appx:///Assets/edit_property-64.png" Stretch="None" Margin="15,0,0,0"/>
                    <TextBlock Text="{Binding ProjectBoxCount}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                    <StackPanel  Grid.Column="1" Orientation="Vertical" Margin="15,0,15,0">

                        <TextBlock Text="Projects" x:Uid="MainPageProjectList" Style="{StaticResource SubheaderTextBlockStyle}"/>
                        <TextBlock Text="Yours tasks into projects." x:Uid="MainPageProjectListSubHeader" Style="{StaticResource SubtitleTextBlockStyle}"/>

                    </StackPanel>
                </Grid>
            </Button>
            <Button Command="{Binding ShowListDetailCommand}" CommandParameter="contexts"
                TabIndex="4" Style="{StaticResource MyListButtonWindows}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="250"/>
                    </Grid.ColumnDefinitions>

                    <Image Grid.Column="0" Source="ms-appx:///Assets/pin-64.png" Stretch="None" Margin="15,0,0,0" />
                    <TextBlock Text="{Binding ContextsBoxCount}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                    <StackPanel  Grid.Column="1" Orientation="Vertical" Margin="15,0,15,0">

                        <TextBlock Text="Contexts" x:Uid="MainPageContextList" Style="{StaticResource SubheaderTextBlockStyle}"/>
                        <TextBlock Text="Yours tasks into contexts." x:Uid="MainPageContextListSubheader" Style="{StaticResource SubtitleTextBlockStyle}"/>

                    </StackPanel>
                </Grid>
            </Button>
        </StackPanel>
        


        
        <StackPanel Grid.Column="1" Grid.Row="0" Margin="5,100,66,0" Orientation="Horizontal" Grid.ColumnSpan="2">
            <TextBlock x:Uid="CurrentListHeaderText" Text="current list:" Style="{StaticResource SubheaderTextBlockStyle}" Margin="0,0,15,0"/>
        <TextBlock   Text="{Binding SelectedList}" Style="{StaticResource SubheaderTextBlockStyle}" FontFamily="Global User Interface"/>
        </StackPanel>
        <Grid x:Name="itemDeta7ilGrid" Margin="0,0,30,90" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2"
            >
            <ListView x:Name="taskListView" Visibility="{Binding IsTaskListVisibile, Converter = {StaticResource BooleanToVisibilityConverter}}"            
                IsItemClickEnabled="True"                
                ItemsSource="{Binding Tasks}"
                SelectionMode="Single"
                SelectedItem="{Binding SelectedTask,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">                
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>                                    
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border Background="Gray" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <CheckBox Name="CheckboxComplete" IsChecked="{Binding IsComplete, Mode=TwoWay}" Grid.Column="0" >
                                    <interactivity:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Checked">
                                            <core:InvokeCommandAction 
                                                Command="{Binding Path=DataContext.CheckTaskCommand,ElementName=taskListView}" />                      
                                        </core:EventTriggerBehavior>
                                    </interactivity:Interaction.Behaviors>
                                </CheckBox>
                                <StackPanel Orientation="Vertical" Margin="10" Grid.Column="1">
                                    <TextBlock Text="{Binding Topic, Mode=TwoWay}" Style="{StaticResource TitleTextBlockStyle}" />
                                    <TextBlock Text="{Binding DueDate, Mode=TwoWay,Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:dd MMM yyyy}'}" Style="{StaticResource BaseTextBlockStyle}" />                                    
                                </StackPanel>
                                
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="ItemClick">
                        <core:InvokeCommandAction Command="{Binding Path=ShowProjectTasksCommand}"
                      />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                </ListView>
            <ListView x:Name="contextListView" Margin="0,0,30,90" Visibility="{Binding IsTaskListVisibile, Converter={StaticResource InverseBooleanToVisibilityConverter}}"            
                IsItemClickEnabled="True"
                ItemsSource="{Binding ContextsCollection}"
                SelectedItem="{Binding SelectedContext,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                SelectionMode="Single" >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border Background="Gray" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Vertical" Margin="10" Grid.Column="0">
                                    <TextBlock Text="{Binding Name, Mode=TwoWay}" Style="{StaticResource TitleTextBlockStyle}" />                                    
                                </StackPanel>
                            </Grid>
                        </Border>                        
                    </DataTemplate>                    
                </ListView.ItemTemplate>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="ItemClick">
                        <core:InvokeCommandAction Command="{Binding Path=ShowContextTasksCommand}"
                      />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </ListView>
            
        </Grid>
        <controls:FadingVisibilityGrid x:Name="DetailTaskGrid"  Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2" DeferredVisibility="{Binding IsTaskControlVisibile, Converter = {StaticResource BooleanToVisibilityConverter}}" >
            <controls:TaskControl />
        </controls:FadingVisibilityGrid>
        <controls:FadingVisibilityGrid x:Name="DettailContxtGrid"  Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2" DeferredVisibility="{Binding IsContextControlVisibile, Converter = {StaticResource BooleanToVisibilityConverter}}">
            <controls:ContextControl/>
        </controls:FadingVisibilityGrid>
    </Grid>

    <Page.BottomAppBar>
        <CommandBar IsOpen="{Binding IsAppBarVisibile, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="AboutAppBarButton" Command="{Binding NavigateCommand}" Label="About" CommandParameter="about" Icon="Favorite"/>
            </CommandBar.SecondaryCommands>
            <!--<AppBarButton x:Uid="ShowContextTasksAppBarButton" Command="{Binding ShowContextTasksCommand}" Label="Show Context tasks" Icon="Pin"/>
            <AppBarButton x:Uid="ShowProjectTasksAppBarButton" Command="{Binding ShowProjectTasksCommand}" Label="Show Project tasks" Icon="Bullets"/>-->
            <AppBarButton x:Uid="EditProjectAppBarButton" Command="{Binding EditProjectCommand}" Label="Edit Project" Icon="CalendarWeek" Visibility="{Binding IsInsideProjectList, Converter = {StaticResource BooleanToVisibilityConverter}}" />
            <AppBarSeparator/>
            <!--<AppBarButton  Command="{Binding CompleteTaskCommand}" Label="Mark as Complete" Icon="Accept"/>-->
            <AppBarButton x:Uid="AddNewAppBarButton" Command="{Binding AddNewTaskCommand}" Label="Add new task" Icon="Add"/>
            <AppBarButton x:Uid="DeleteTaskAppBarButton" Command="{Binding DeleteCommand}" Label="Delete task" Icon="Delete"/>
            
            <AppBarSeparator/>
            <AppBarButton x:Uid="AddNewContextAppBarButton" Command="{Binding AddNewContextCommand}" Label="Add Context" Icon="Pin" />
            <AppBarButton x:Uid="DeleteContextAppBarButton" Command="{Binding DeleteContextCommand}" Label="Delete Context" Icon="Remove" Visibility="{Binding IsContextButtonVisibile, Converter={StaticResource BooleanToVisibilityConverter},UpdateSourceTrigger=PropertyChanged}"/>
        </CommandBar>
    </Page.BottomAppBar>
</controls:PageBase>
